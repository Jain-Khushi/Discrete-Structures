#include<iostream>
using namespace std;

int A[20][20]; 

int paths(int edge, int source, int destination, int length)
{
    if (length == 0 && source == destination)
        return 1;
    if (length == 1 && A[source][destination]!=0)
        return 1;
    if (length <= 0)
        return 0;
        
    int count = 0;
    for (int i = 0; i < edge; i++)
        if (A[source][i] == 1) 
            count += paths(edge, i, destination, length - 1);
 
    return count;
}
void edges(int first, int second) {
	if(first==second){
	A[first][second] += 1;
	} 
	else{
   A[first][second] += 1;
   A[second][first] += 1;
	}
}

int main(){
	int ver,edge,first,second;
	int source,destination,length;
	cout<<"Enter the number of vertices  : ";
	cin>>ver;
	cout<<"Enter the number of edges : ";
	cin>>edge;
	cout<<endl;
 	for(int i=0;i<edge;i++){
 		cout<<"Enter the vertices for edge "<<i+1<<"  : "<<endl;
 		cout<<"Enter vertex 1 : ";
 		cin>>first;
 		cout<<"Enter vertex 2 : ";
 		cin>>second;
 		edges(first,second);
	 }
	 cout<<endl;
	 cout<<"The matrix is  : "<<endl;	
	 for(int i = 1; i <=ver; i++) {
      for(int j = 1; j <=ver; j++) {
         cout << A[i][j] << " ";
      }
      cout << endl;
    }
    cout<<endl;
 	
 	cout<<"Enter source vertex  : ";
 	cin>>source;
 	cout<<"Enter destination vertex  : ";
 	cin>>destination;
 	cout<<"Enter length of path  : ";
 	cin>>length;
	cout<<"The number of path between vertex "<<source<<" and vertex "<<destination<<" of length "<<length<<" is :  "<<paths(edge,source,destination,length)<<endl; 
}
