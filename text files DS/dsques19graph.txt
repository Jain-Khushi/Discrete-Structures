#include<iostream>
using namespace std;
int Matrix[20][20]; 

void edge(int u, int v) { 
    for(int i=0;i<=u;i++)
    {
        for(int j=0;i<=v;i++)
        {
          Matrix[u][v]=0;
        }
    }
   if(u==v){
	++Matrix[u][v] ;
	} 
	else{
   ++Matrix[u][v];
   ++Matrix[v][u] ;
	}
}
void display(int n) {
   
   for(int i = 0; i <=n; i++) {
      for(int j = 0; j <=n; j++) {
         cout << Matrix[i][j] << " ";
      }
      cout << endl;
   }
}



int main(){
	int n ,x,u,v, s, d, k;
 
	cout<<"Enter the number of vertices  : ";
	cin>>n;
	cout<<"Enter the number of edges : ";
	cin>>x;
 	for(int i=0;i<x;i++){
 		cout<<"Edge no. "<<i+1<<"  : "<<endl;
 		cout<<"Enter the source vertex : ";
 		cin>>u;
 		cout<<"Enter the destination vertex : ";
 		cin>>v;
 		edge(u,v);
	 }
	 
 	 cout<<endl<<endl;
 	cout<<"The matrix is  : "<<endl;	
 	display(n);
	cout<<endl;
    int degree, order = 0;
    for (int i = 0; i < n; i++)
    {
        degree = 0;
        for (int j = 0; j < n; j++)
            degree += Matrix[i][j];
        if (degree % 2 != 0)
            order++;
    } 
    if (order == 0)
        cout << "Graph has an Eulerian Circuit." << endl;
    else if (order == 2)
        cout << "Graph has an Eulerian Path." << endl;
    else
        cout << "Graph is Not Eulerian." << endl;
 	 
    return 0;
}

